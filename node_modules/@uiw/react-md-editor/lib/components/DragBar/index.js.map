{
  "version": 3,
  "sources": [
    "../../../src/components/DragBar/index.tsx"
  ],
  "names": [
    "DragBar",
    "props",
    "prefixCls",
    "onChange",
    "dragRef",
    "handleMouseMove",
    "event",
    "current",
    "newHeight",
    "height",
    "clientY",
    "dragY",
    "minHeight",
    "maxHeight",
    "handleMouseUp",
    "undefined",
    "handleMouseDown",
    "document",
    "addEventListener",
    "removeEventListener",
    "svg"
  ],
  "mappings": ";;;;;;;AAAA;;;;AAWA,IAAMA,OAAgC,GAAG,SAAnCA,OAAmC,CAACC,KAAD,EAAW;AAClD,aAAgCA,KAAK,IAAI,EAAzC;AAAA,MAAQC,SAAR,QAAQA,SAAR;AAAA,MAAmBC,QAAnB,QAAmBA,QAAnB;;AACA,MAAMC,OAAO,GAAG,oBAAhB;;AACA,WAASC,eAAT,CAAyBC,KAAzB,EAA4C;AAC1C,QAAIF,OAAO,CAACG,OAAZ,EAAqB;AACnB,UAAMC,SAAS,GAAGJ,OAAO,CAACG,OAAR,CAAgBE,MAAhB,GAAyBH,KAAK,CAACI,OAA/B,GAAyCN,OAAO,CAACG,OAAR,CAAgBI,KAA3E;;AACA,UAAIH,SAAS,IAAIP,KAAK,CAACW,SAAnB,IAAgCJ,SAAS,IAAIP,KAAK,CAACY,SAAvD,EAAkE;AAChEV,QAAAA,QAAQ,IAAIA,QAAQ,CAACC,OAAO,CAACG,OAAR,CAAgBE,MAAhB,IAA0BH,KAAK,CAACI,OAAN,GAAgBN,OAAO,CAACG,OAAR,CAAgBI,KAA1D,CAAD,CAApB;AACD;AACF;AACF;;AACD,WAASG,aAAT,GAAyB;AACvBV,IAAAA,OAAO,CAACG,OAAR,GAAkBQ,SAAlB;AACD;;AACD,WAASC,eAAT,CAAyBV,KAAzB,EAA8E;AAC5EF,IAAAA,OAAO,CAACG,OAAR,GAAkB;AAChBE,MAAAA,MAAM,EAAER,KAAK,CAACQ,MADE;AAEhBE,MAAAA,KAAK,EAAEL,KAAK,CAACI;AAFG,KAAlB;AAID;;AAED,wBAAU,YAAM;AACd,QAAIO,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCb,eAAvC;AACAY,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,aAArC;AACD;;AACD,WAAO,YAAM;AACX,UAAIG,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0Cd,eAA1C;AACAY,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCL,aAAxC;AACD;AACF,KALD;AAMD,GAXD,EAWG,EAXH;AAYA,MAAMM,GAAG,GAAG,oBACV;AAAA,wBACE;AAAK,MAAA,OAAO,EAAC,aAAb;AAA2B,MAAA,MAAM,EAAC,MAAlC;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,CAAC,EAAC;AAFJ;AADF,MADF;AAAA,GADU,EASV,EATU,CAAZ;AAWA,sBACE;AAAK,IAAA,SAAS,EAAKlB,SAAL,SAAd;AAAoC,IAAA,WAAW,EAAEc,eAAjD;AAAA,cACGI;AADH,IADF;AAKD,CAjDD;;eAmDepB,O",
  "sourcesContent": [
    "import React, { useEffect, useMemo, useRef } from 'react';\nimport { IProps } from '../../utils';\nimport './index.less';\n\nexport interface IDragBarProps extends IProps {\n  height: number;\n  maxHeight: number;\n  minHeight: number;\n  onChange: (value: number) => void;\n}\n\nconst DragBar: React.FC<IDragBarProps> = (props) => {\n  const { prefixCls, onChange } = props || {};\n  const dragRef = useRef<{ height: number; dragY: number }>();\n  function handleMouseMove(event: MouseEvent) {\n    if (dragRef.current) {\n      const newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY,\n    };\n  }\n\n  useEffect(() => {\n    if (document) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      if (document) {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, []);\n  const svg = useMemo(\n    () => (\n      <svg viewBox=\"0 0 512 512\" height=\"100%\">\n        <path\n          fill=\"currentColor\"\n          d=\"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n        />\n      </svg>\n    ),\n    [],\n  );\n  return (\n    <div className={`${prefixCls}-bar`} onMouseDown={handleMouseDown}>\n      {svg}\n    </div>\n  );\n};\n\nexport default DragBar;\n"
  ]
}