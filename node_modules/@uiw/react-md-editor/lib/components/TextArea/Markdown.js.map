{
  "version": 3,
  "sources": [
    "../../../src/components/TextArea/Markdown.tsx"
  ],
  "names": [
    "Markdown",
    "props",
    "prefixCls",
    "EditorContext",
    "markdown",
    "highlightEnable",
    "dispatch",
    "preRef",
    "React",
    "createRef",
    "current",
    "textareaPre",
    "html2Escape",
    "sHtml",
    "replace",
    "str",
    "c",
    "data",
    "fragment",
    "use",
    "rehypePrism",
    "ignoreMissing",
    "processSync",
    "createElement",
    "className",
    "dangerouslySetInnerHTML",
    "__html",
    "value"
  ],
  "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;;AAHA;AAOe,SAASA,QAAT,CAAkBC,KAAlB,EAAwC;AACrD,MAAQC,SAAR,GAAsBD,KAAtB,CAAQC,SAAR;;AACA,oBAAqD,uBAAWC,sBAAX,CAArD;AAAA,yCAAQC,QAAR;AAAA,MAAQA,QAAR,qCAAmB,EAAnB;AAAA,MAAuBC,eAAvB,eAAuBA,eAAvB;AAAA,MAAwCC,QAAxC,eAAwCA,QAAxC;;AACA,MAAMC,MAAM,gBAAGC,eAAMC,SAAN,EAAf;;AACA,wBAAU,YAAM;AACd,QAAIF,MAAM,CAACG,OAAP,IAAkBJ,QAAtB,EAAgC;AAC9BA,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,WAAW,EAAEJ,MAAM,CAACG;AAAtB,OAAD,CAAR;AACD,KAHa,CAId;;AACD,GALD,EAKG,EALH;;AAMA,WAASE,WAAT,CAAqBC,KAArB,EAAoC;AAClC,WAAOA,KAAK,CACTC,OADI,CACI,iCADJ,EACuC,UAACC,GAAD,EAAiB;AAC3D,aAAOA,GAAG,CAACD,OAAJ,CACL,SADK,EAEL,UAACE,CAAD;AAAA,eAAiB;AAAE,eAAK,MAAP;AAAe,eAAK,MAApB;AAA4B,eAAK,OAAjC;AAA0C,eAAK;AAA/C,SAAD,CAAsFA,CAAtF,CAAhB;AAAA,OAFK,CAAP;AAID,KANI,EAOJF,OAPI,CAQH,SARG,EASH,UAACE,CAAD;AAAA,aAAiB;AAAE,aAAK,MAAP;AAAe,aAAK,MAApB;AAA4B,aAAK,OAAjC;AAA0C,aAAK;AAA/C,OAAD,CAAsFA,CAAtF,CAAhB;AAAA,KATG,CAAP;AAWD;;AAED,SAAO,oBAAQ,YAAM;AACnB,QAAI,CAACX,eAAD,IAAoB,CAACD,QAAzB,EAAmC;AACjC,0BAAO;AAAK,QAAA,QAAQ,EAAEA,QAAQ,IAAI,EAA3B;AAA+B,QAAA,GAAG,EAAEG,MAApC;AAA4C,QAAA,SAAS,EAAKL,SAAL;AAArD,QAAP;AACD;;AACD,QAAMa,GAAG,GAAG,sBACTE,IADS,CACJ,UADI,EACQ;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADR,EAETC,GAFS,CAELC,oBAFK,EAEQ;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAFR,EAGTC,WAHS,qCAIyBpB,SAJzB,0EAIoGU,WAAW,CACrHR,QADqH,CAJ/G,mBAAZ;AAQA,wBAAOI,eAAMe,aAAN,CAAoB,KAApB,EAA2B;AAChCC,MAAAA,SAAS,EAAE,qBADqB;AAEhCC,MAAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEX,GAAG,CAACY;AAAd;AAFO,KAA3B,CAAP;AAID,GAhBM,EAgBJ,CAACtB,eAAD,EAAkBD,QAAlB,EAA4BG,MAA5B,EAAoCL,SAApC,CAhBI,CAAP;AAiBD",
  "sourcesContent": [
    "import React, { useContext, useEffect, useMemo } from 'react';\nimport { rehype } from 'rehype';\n// @ts-ignore\nimport rehypePrism from '@mapbox/rehype-prism';\nimport { IProps } from '../../utils';\nimport { EditorContext } from '../../Context';\n\nexport interface MarkdownProps extends IProps, React.HTMLAttributes<HTMLPreElement> {}\n\nexport default function Markdown(props: MarkdownProps) {\n  const { prefixCls } = props;\n  const { markdown = '', highlightEnable, dispatch } = useContext(EditorContext);\n  const preRef = React.createRef<HTMLPreElement>();\n  useEffect(() => {\n    if (preRef.current && dispatch) {\n      dispatch({ textareaPre: preRef.current });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  function html2Escape(sHtml: string) {\n    return sHtml\n      .replace(/```(.*)\\s+([\\s\\S]*?)(\\s.+)?```/g, (str: string) => {\n        return str.replace(\n          /[<>&\"]/g,\n          (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n        );\n      })\n      .replace(\n        /[<>&\"]/g,\n        (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n      );\n  }\n\n  return useMemo(() => {\n    if (!highlightEnable || !markdown) {\n      return <pre children={markdown || ''} ref={preRef} className={`${prefixCls}-text-pre wmde-markdown-color`} />;\n    }\n    const str = rehype()\n      .data('settings', { fragment: true })\n      .use(rehypePrism, { ignoreMissing: true })\n      .processSync(\n        `<pre class=\"language-markdown ${prefixCls}-text-pre wmde-markdown-color\"><code class=\"language-markdown\">${html2Escape(\n          markdown,\n        )}</code></pre>`,\n      );\n    return React.createElement('div', {\n      className: 'wmde-markdown-color',\n      dangerouslySetInnerHTML: { __html: str.value as string },\n    });\n  }, [highlightEnable, markdown, preRef, prefixCls]);\n}\n"
  ]
}