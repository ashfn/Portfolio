"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-enable @typescript-eslint/unified-signatures */
/*
 * Implementation.
 */
function createList(orderedOrChildrenOrOptions, startOrChildren, spreadOrChildren, children) {
    let options;
    if (orderedOrChildrenOrOptions === undefined) {
        options = { children: [] };
    }
    else if (typeof orderedOrChildrenOrOptions === 'boolean') {
        options = { ordered: orderedOrChildrenOrOptions, children: [] };
    }
    else if (Array.isArray(orderedOrChildrenOrOptions)) {
        options = { children: orderedOrChildrenOrOptions };
    }
    else {
        options = { ...orderedOrChildrenOrOptions, children: [] };
    }
    if (startOrChildren !== undefined) {
        if (typeof startOrChildren === 'number') {
            options.start = startOrChildren;
        }
        else {
            options.children = startOrChildren;
        }
    }
    if (spreadOrChildren !== undefined) {
        if (typeof spreadOrChildren === 'boolean') {
            options.spread = spreadOrChildren;
        }
        else {
            options.children = spreadOrChildren;
        }
    }
    if (children) {
        options.children = children;
    }
    return { type: 'list', ...options };
}
exports.createList = createList;
/**
 * Type guard for List.
 *
 * @param node - The node to test.
 * @returns True if node is List.
 */
function isList(node) {
    return node.type === 'list';
}
exports.isList = isList;
/**
 * Type assertion for List.
 *
 * @param node - The node to test.
 */
function assertList(node) {
    if (!isList(node)) {
        throw new Error('Node is not a List');
    }
}
exports.assertList = assertList;
//# sourceMappingURL=List.js.map