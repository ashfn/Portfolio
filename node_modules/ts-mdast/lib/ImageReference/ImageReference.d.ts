import { ImageReference, ReferenceType } from 'mdast';
import { Node } from 'unist';
interface Options {
    alt?: string;
    label?: string;
}
/**
 * @param identifier - The reference identifier.
 * @param referenceType - The reference type.
 * @param alt - The alternative text.
 * @param label - The original value of the normalized identifier field.
 * @returns The image reference.
 */
export declare function createImageReference(identifier: string, referenceType: ReferenceType, alt?: string, label?: string): ImageReference;
/**
 * @param identifier - The reference identifier.
 * @param referenceType - The reference type.
 * @param options - The options of the image reference.
 * @returns The image reference.
 */
export declare function createImageReference(identifier: string, referenceType: ReferenceType, options: Options): ImageReference;
/**
 * Type guard for ImageReference.
 *
 * @param node - The node to test.
 * @returns True if node is ImageReference.
 */
export declare function isImageReference(node: Node): node is ImageReference;
/**
 * Type assertion for ImageReference.
 *
 * @param node - The node to test.
 */
export declare function assertImageReference(node: Node): asserts node is ImageReference;
export {};
