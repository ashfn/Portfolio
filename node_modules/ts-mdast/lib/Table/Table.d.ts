import { AlignType, Table, TableContent } from 'mdast';
import { Node } from 'unist';
interface Options {
    align?: AlignType[];
}
/**
 * @param align - List of how cells in columns are aligned.
 * @param children - The children of the table.
 * @returns The table.
 */
export declare function createTable(align: AlignType[], children?: TableContent[]): Table;
/**
 * @param children - The children of the table.
 * @returns The table.
 */
export declare function createTable(children?: TableContent[]): Table;
/**
 * @param options - The options of the table.
 * @param children - The children of the table.
 * @returns The table.
 */
export declare function createTable(options: Options, children?: TableContent[]): Table;
/**
 * Type guard for Table.
 *
 * @param node - The node to test.
 * @returns True if node is Table.
 */
export declare function isTable(node: Node): node is Table;
/**
 * Type assertion for Table.
 *
 * @param node - The node to test.
 */
export declare function assertTable(node: Node): asserts node is Table;
export {};
