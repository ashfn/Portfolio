import { Link, StaticPhrasingContent } from 'mdast';
import { Node } from 'unist';
interface Options {
    title?: string;
}
/**
 * @param url - URL to the referenced resource.
 * @param title - Advisory information for the resource.
 * @param children - The children of the link.
 * @returns The link.
 */
export declare function createLink(url: string, title: string, children?: StaticPhrasingContent[]): Link;
/**
 * @param url - URL to the referenced resource.
 * @param children - The children of the link.
 * @returns The link.
 */
export declare function createLink(url: string, children?: StaticPhrasingContent[]): Link;
/**
 * @param url - URL to the referenced resource.
 * @param options - The options of the definition.
 * @param children - The children of the link.
 * @returns The link.
 */
export declare function createLink(url: string, options: Options, children?: StaticPhrasingContent[]): Link;
/**
 * Type guard for Link.
 *
 * @param node - The node to test.
 * @returns True if node is Link.
 */
export declare function isLink(node: Node): node is Link;
/**
 * Type assertion for Link.
 *
 * @param node - The node to test.
 */
export declare function assertLink(node: Node): asserts node is Link;
export {};
