import { Definition } from 'mdast';
import { Node } from 'unist';
interface Options {
    label?: string;
    title?: string;
}
/**
 * @param identifier - Identifier of the definition, can match an identifier field on another node.
 * @param url - URL to the referenced resource.
 * @param label - The original value of the normalized identifier field.
 * @param title - Advisory information for the resource.
 * @returns The definition.
 */
export declare function createDefinition(identifier: string, url: string, label?: string, title?: string): Definition;
/**
 * @param identifier - Identifier of the definition, can match an identifier field on another node.
 * @param url - URL to the referenced resource.
 * @param options - The options of the definition.
 * @returns The definition.
 */
export declare function createDefinition(identifier: string, url: string, options: Options): Definition;
/**
 * Type guard for Definition.
 *
 * @param node - The node to test.
 * @returns True if node is Definition.
 */
export declare function isDefinition(node: Node): node is Definition;
/**
 * Type assertion for Definition.
 *
 * @param node - The node to test.
 */
export declare function assertDefinition(node: Node): asserts node is Definition;
export {};
