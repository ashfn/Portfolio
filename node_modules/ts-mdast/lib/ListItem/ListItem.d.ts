import { BlockContent, ListItem } from 'mdast';
import { Node } from 'unist';
interface Options {
    checked?: boolean;
    spread?: boolean;
}
/**
 * @param checked - Whether the item is done (true), not done (false), or indeterminate or not applicable
 * (when not present).
 * @param spread - The item contains two or more children separated by a blank line (true), or not (false or
 * not present).
 * @param children - The children of the list item.
 * @returns The list item.
 */
export declare function createListItem(checked: boolean, spread: boolean, children?: BlockContent[]): ListItem;
/**
 * @param checked - Whether the item is done (true), not done (false), or indeterminate or not applicable
 * (when not present).
 * @param children - The children of the list item.
 * @returns The list item.
 */
export declare function createListItem(checked: boolean, children?: BlockContent[]): ListItem;
/**
 * @param children - The children of the list item.
 * @returns The list item.
 */
export declare function createListItem(children?: BlockContent[]): ListItem;
/**
 * @param options - The options of the list item.
 * @param children - The children of the list item.
 * @returns The list item.
 */
export declare function createListItem(options: Options, children?: BlockContent[]): ListItem;
/**
 * Type guard for ListItem.
 *
 * @param node - The node to test.
 * @returns True if node is ListItem.
 */
export declare function isListItem(node: Node): node is ListItem;
/**
 * Type assertion for ListItem.
 *
 * @param node - The node to test.
 */
export declare function assertListItem(node: Node): asserts node is ListItem;
export {};
