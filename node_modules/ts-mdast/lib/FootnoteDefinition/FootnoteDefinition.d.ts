import { BlockContent, FootnoteDefinition } from 'mdast';
import { Node } from 'unist';
interface Options {
    label?: string;
}
/**
 * @param identifier - The footnote identifier.
 * @param label - Label for the footnote.
 * @param children - The footnote children.
 * @returns The paragraph.
 */
export declare function createFootnoteDefinition(identifier: string, label: string, children?: BlockContent[]): FootnoteDefinition;
/**
 * @param identifier - The footnote identifier.
 * @param children - The footnote children.
 */
export declare function createFootnoteDefinition(identifier: string, children?: BlockContent[]): FootnoteDefinition;
/**
 * @param identifier - The footnote identifier.
 * @param options - The options of the footnote.
 * @param children - The footnote children.
 */
export declare function createFootnoteDefinition(identifier: string, options: Options, children?: BlockContent[]): FootnoteDefinition;
/**
 * Type guard for FootnoteDefinition.
 *
 * @param node - The node to test.
 * @returns True if node is FootnoteDefinition.
 */
export declare function isFootnoteDefinition(node: Node): node is FootnoteDefinition;
/**
 * Type assertion for FootnoteDefinition.
 *
 * @param node - The node to test.
 */
export declare function assertFootnoteDefinition(node: Node): asserts node is FootnoteDefinition;
export {};
