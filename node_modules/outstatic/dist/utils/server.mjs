import l from"fs";import{join as o}from"path";import h from"gray-matter";var a=o(process.cwd(),process.env.OST_CONTENT_PATH||"outstatic/content"),d=/\.mdx?$/i;function f(e){let r=o(a,e);return P(r).map(t=>t.replace(d,""))}function y(e,r,c=[]){try{let s=r.replace(d,""),t=o(a,e),i=o(t,`${s}.md`),p=l.readFileSync(i,"utf8"),{data:u,content:g}=h(p),m={};return u.status==="draft"?{}:(c.forEach(n=>{n==="slug"&&(m[n]=s),n==="content"&&(m[n]=g),typeof u[n]<"u"&&(m[n]=u[n])}),m)}catch(s){return console.error({getDocumentBySlug:s}),{}}}function S(e,r=[]){return f(e).map(t=>y(e,t,[...r,"publishedAt","status"])).filter(t=>t.status==="published").sort((t,i)=>t.publishedAt>i.publishedAt?-1:1)}var D=e=>{try{return l.readdirSync(a+"/"+e).filter(t=>d.test(t)).filter(t=>{let i=o(a,e),p=o(i,`${t}`),u=l.readFileSync(p,"utf8"),{data:g}=h(u);return g.status==="published"}).map(t=>t.replace(d,"")).map(t=>({params:{slug:t}}))}catch(r){return console.error({getDocumentPaths:r}),[]}},T=()=>{try{return l.readdirSync(a)}catch(e){return console.error({getCollections:e}),[]}};function P(e){try{return l.readdirSync(e,{withFileTypes:!0}).filter(s=>s.isFile()&&d.test(s.name)).map(s=>s.name)}catch(r){return console.error({readMdMdxFiles:r}),[]}}export{T as getCollections,y as getDocumentBySlug,D as getDocumentPaths,f as getDocumentSlugs,S as getDocuments};
